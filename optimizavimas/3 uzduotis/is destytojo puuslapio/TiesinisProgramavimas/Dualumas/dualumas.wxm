/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 14.12.1 ] */

/* [wxMaxima: input   start ] */
load(simplex);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Rasti uždavinio dualiuosius sprendinius.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f:30*x1+20*x2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
apr:[2*x1+x2<=10,x1+x2<=8];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
maximize_lp(f,apr),nonegative_lp=true;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Dualusis užd.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
vars:sort(listofvars(apr));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
n:length(vars);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
c:makelist(coeff(f,vars[k]),k,1,n);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
A:coefmatrix(map(lhs,apr),vars);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
b:map(rhs,apr);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
m:length(b);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
Y:makelist(concat(y,k),k,1,m);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
f1:b.Y;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
apr1:makelist(transpose(A)[k].Y>=c[k],k,1,n);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
transpose(A).Y>=transpose(c);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
apr1:makelist(lhs(%)[k,1]>=rhs(%)[k,1],k,1,m);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
minimize_lp(f1,apr1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
dual(f,apr):=block([vars,n,m,b,c,Y,f1,apr1],
vars:sort(listofvars(apr)),
n:length(vars),
c:makelist(coeff(f,vars[k]),k,1,n),
A:coefmatrix(map(lhs,apr),vars),
b:map(rhs,apr),
m:length(b),
Y:makelist(concat(y,k),k,1,m),
f1:b.Y,
apr1:makelist(transpose(A)[k].Y>=c[k],k,1,n),
[f1,apr1]
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
sta(x):=block([oper,vl,c,k,r],
oper:op(x),
v:listofvars(x),
vl:makelist(k=0,k,v),
r:lhs(x)-rhs(x),
c:ev(r,vl),
if oper="=" then
[r-c<=-c,c-r<=c]
elseif oper="<=" then [r-c<=-c]
elseif oper=">=" then [c-r<=c]
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
standardize(ap):=block([sta],
sta(_x):=block([oper,vl,c,k,r],
oper:op(_x),
v:listofvars(_x),
vl:makelist(k=0,k,v),
r:lhs(_x)-rhs(_x),
c:ev(r,vl),
if oper="=" then
[r-c<=-c,c-r<=c]
elseif oper="<=" then [r-c<=-c]
elseif oper=">=" then [c-r<=c]
),
if ap=[] then return(ap),
map(sta,ap),flatten(%%))$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
load(simplex);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
1 pvz
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f:30*x1+20*x2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
apr:[2*x1+x2<=10,x1+x2<=8];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
[f1,apr1]:dual(f,apr);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
maximize_lp(f,apr),nonegative_lp=true;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
minimize_lp(f1,apr1),nonegative_lp=true;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Pvz. Ciocys, 91 psl.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f:x1-x2+x3$
apr:[4*x1+x2+x3<=8, -2*x1-x2+2*x3<=6]$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
[f1,apr1]:dual(f,apr);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
maximize_lp(f,apr),nonegative_lp=true;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
minimize_lp(f1,apr1),nonegative_lp=true;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]

   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Pvz. OM, 84 psl. Rasti min f
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f:5*x1+7*x2-3*x3+x4-2*x5;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
apr:[
x1+x2+x3+x4+x5=15,
x1+3*x2-x4-4*x5<=2,
4*x1-x3+3*x4+7*x5>=7,
2*x2+x3-4*x4+3*x5=2,
x1>=0,
x5>=0
];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
minimize_lp(f,apr);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
apr0:standardize(apr);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
minimize_lp(f,apr0);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
[f1,apr1]:dual(f,apr0);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
maximize_lp(f1,apr1);
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
