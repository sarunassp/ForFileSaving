/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 13.04.2 ] */

/* [wxMaxima: input   start ] */
load(simplex)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
sta(x):=block([oper,vl,c,k,r],
oper:op(x),
v:listofvars(x),
vl:makelist(k=0,k,v),
r:lhs(x)-rhs(x),
c:ev(r,vl),
if oper="=" then
[r-c<=-c,c-r<=c]
elseif oper="<=" then [r-c<=-c]
elseif oper=">=" then [c-r<=c]
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
standardize(ap):=block([sta],
sta(_x):=block([oper,vl,c,k,r],
oper:op(_x),
v:listofvars(_x),
vl:makelist(k=0,k,v),
r:lhs(_x)-rhs(_x),
c:ev(r,vl),
if oper="=" then
[r-c<=-c,c-r<=c]
elseif oper="<=" then [r-c<=-c]
elseif oper=">=" then [c-r<=c]
),
if ap=[] then return(ap),
map(sta,ap),flatten(%%))$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
F:30*x1+20*x2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
aprib:[x1<=4,x1>=0,x2>=0,x1+x2<=8,2*x1+x2<=10];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
maximize_lp(F,aprib);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
st:standardize(aprib);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
maximize_lp(F,st);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
nvars:makelist(concat(z,k),k,1,length(aprib));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ovars:listofvars(F);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
cf:makelist(coeff(F,k),k,ovars);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
b:makelist(rhs(st[k]),k,1,length(aprib));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
A:coefmatrix(map(lhs,st),ovars);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
At:transpose(A);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
list_matrix_entries(At.nvars);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
nap1:makelist(%[i]>=cf[i],i,1,length(cf));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
nap2:[2*z5+z4-z2+z1>=30,z5+z4-z3>=20,z1>=0,z2>=0,z3>=0,z4>=0,z5>=0];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
nf:nvars.b;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
minimize_lp(nf,nap1),nonegative_lp=true;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
load(nopt);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
minimize_nopt(nf,nap2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
f:10*y5+8*y4+4*y1;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
apr:[2*y5+y4-y2+y1>=30,y5+y4-y3>=20];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
minimize_lp(f,apr);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
standardize(ap):=block([sta],
sta(_x):=block([oper,vl,c,k,r],
oper:op(_x),
v:listofvars(_x),
vl:makelist(k=0,k,v),
r:lhs(_x)-rhs(_x),
c:ev(r,vl),
if oper="=" then
[r-c<=-c,c-r<=c]
elseif oper="<=" then [r-c<=-c]
elseif oper=">=" then [c-r<=c]
),
if ap=[] then return(ap),
map(sta,ap),flatten(%%))$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
dual(f,apr,z):=block([st,A,At,b,c,nf,nvars,posnvars,ovars,napr,i,k],
st:standardize(apr),
_n:length(apr),
nvars:makelist(concat(z,k),k,1,_n),
posnvars:makelist(nvars[k]>=0,k,1,_n),
ovars:listofvars(f),
c:makelist(coeff(f,k),k,ovars),
b:makelist(rhs(st[k]),k,1,_n),
A:coefmatrix(map(lhs,st),ovars),
At:transpose(A),
list_matrix_entries(At.nvars),
makelist(%%[i]>=c[i],i,1,length(c)),
napr:append(%%,posnvars),
nf:nvars.b,
return([nf,napr])
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
F:30*x1+20*x2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
aprib:[x1<=4,x1>=0,x2>=0,x1+x2<=8,2*x1+x2<=10];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
d:dual(F,aprib,y);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
load(simplex);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
minimize_lp(d[1],d[2]);
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
